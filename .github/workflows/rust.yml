name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --all-features --verbose
    - name: Check Format
      run: cargo fmt -- --check
    - name: Clippy
      run: cargo clippy --all-features -- -D warnings
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    - uses: actions-rs/cargo@v1
      with:
        command: clean
    - uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --no-fail-fast --verbose -- --test-threads=1
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests -Cinstrument-coverage -Copt-level=0'
        RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests -Cinstrument-coverage -Copt-level=0'
    - uses: actions-rs/grcov@0.2-proto
      with:
        args: >
          -t lcov
          --llvm
          --ignore-not-existing
          --ignore "/*"
          -o ./target/lcov.info
          ./target/debug/
    - name: Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        verbose: true
        fail_ci_if_error: true
        files: lcov.info
